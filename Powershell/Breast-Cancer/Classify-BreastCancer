Import-Module $env:HOMEPATH\documents\Code\Powershell\ML\MLHelper.ps1
Import-Module $env:HOMEPATH\documents\Code\Powershell\ML\PowerANN.ps1

$mlx = [MLHelper]::new()
$mly = [MLHelper]::new()
$n = [PowerANN]::new()

# Preprocess Data
Write-Host "Preprocessing data"
$data = Get-Content "$env:HOMEPATH\documents\Code\Powershell\ML\Breast-Cancer\data.csv"

$num = [Math]::Round($data.Count * 0.7)
Write-Host $data.Count $num ($data.Count-$num)
$trainx = @(0) * $num
$trainy = @(0) * $num
$testx = @(0) * ($data.Count - $num)
$testy = @(0) * ($data.Count - $num)

# Training set
$map = @(0) * $data.Count
for ($i = 0; $i -lt $num; $i++) {
    # Choose a unique random vector to add to training set
    $k = Get-Random -Minimum 0 -Maximum $data.Count
    while ($map[$k] -eq 1) {
        $k++
        
        if ($k -ge $data.Count) {
            $k = 0
        }
    }

    $data[$k] = $data[$k].Split(',')
    $trainx[$i] = $data[$k][2..$data.Count]

    Switch ($data[$k][1]) {
        "M" { $trainy[$i] = @(1, 0) }
        "B" { $trainy[$i] = @(0, 1) }
    }
    $map[$k] = 1
}

# Test set
$num = 0
for ($i = 0; $i -lt $data.Count; $i++) {
    if ($map[$i] -eq 0) {
        $data[$i] = $data[$i].Split(',')
        $testx[$num] = $data[$i][2..$data.Count]

        Switch ($data[$i][1]) {
            "M" { $testy[$num] = @(1, 0) }
            "B" { $testy[$num] = @(0, 1) }
        }  
        $num++
    }
}

Write-Host "Normalizing data"
$trainx = $mlx.normalizeData($trainx)
$testx = $mlx.normalizeData($testx)

# Sigmoid hidden Layers
$n.addLayer(6, 3)

# Softmax output layer
$n.addLayer(2, 2)

Write-Host "Training"
$con = $true
while ($con) {
    $n.train($trainx, $trainy, 0.00000001, 100, 0.01)
    $n.test($testx, $testy)
    $con = (Read-Host 'Continue Training?') -eq "y"
}

# Store model
$n | Export-Clixml $env:HOMEPATH\documents\Code\Powershell\ML\Breast-Cancer\model.xml
