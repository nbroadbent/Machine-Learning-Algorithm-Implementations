Import-Module $env:HOMEPATH\documents\Code\Powershell\ML\MLHelper.ps1
Import-Module $env:HOMEPATH\documents\Code\Powershell\ML\PowerANN.ps1

$mlx = [MLHelper]::new()
$mly = [MLHelper]::new()
$n = [PowerANN]::new()

# Preprocess Data
$data = Get-Content "$env:HOMEPATH\documents\Code\Powershell\ML\Iris\data.csv"

$num = [Math]::Round($data.Count * 0.7)
Write-Host $data.Count $num ($data.Count-$num)
$trainx = @(0) * $num
$trainy = @(0) * $num
$testx = @(0) * ($data.Count - $num)
$testy = @(0) * ($data.Count - $num)

# Training set
$map = @(0) * $data.Count
for ($i = 0; $i -lt $num; $i++) {
    # Choose a unique random vector to add to training set
    $k = Get-Random -Minimum 0 -Maximum $data.Count
    if ($map[$k] -eq 1) {
        $i--
        continue
    }

    $data[$k] = $data[$k].Split(',')
    $trainx[$i] = $data[$k][0..($data[$k].Count-2)]       

    Switch ($data[$k][$data[$k].Count-1]) {
        "Iris-setosa" { 
            $trainy[$i] = @(1, 0, 0) 
        }
        "Iris-versicolor" { 
            $trainy[$i] = @(0, 1, 0) 
        }
        "Iris-virginica" { 
            $trainy[$i] = @(0, 0, 1) 
        }
    }
    $map[$k] = 1
}

# Test set
$num = 0
for ($i = 0; $i -lt $data.Count; $i++) {
    if ($map[$i] -eq 0) {
        $data[$i] = $data[$i].Split(',')
        $testx[$num] = $data[$i][0..($data[$k].Count-2)]

        Switch ($data[$i][$data[$k].Count-1]) {
            "Iris-setosa" { 
                $testy[$num] = @(1, 0, 0) 
            }
            "Iris-versicolor" { 
                $testy[$num] = @(0, 1, 0) 
            }
            "Iris-virginica" { 
                $testy[$num] = @(0, 0, 1) 
            }
        }
        $num++
    }
}

$trainx = $mlx.normalizeData($trainx)
$testx = $mlx.normalizeData($testx)

# Sigmoid hidden Layer
$n.addLayer(6, 3)

# Softmax output layer
$n.addLayer(3, 2)

$n.train($trainx, $trainy, 0.00001, 1000, 0.05)
$n.test($testx, $testy)

# Store model
$n | Export-Clixml $env:HOMEPATH\documents\Code\Powershell\ML\Iris\model.xml
